{"version":3,"sources":["components/header.tsx","components/summery.tsx","components/filtering.tsx","components/togle.tsx","components/card.tsx","App.tsx","index.tsx"],"names":["Header","useState","isopen","setIsopen","element","useRef","handleClickOutside","e","current","contains","target","useEffect","window","addEventListener","removeEventListener","className","ref","id","onClick","Summery","useStyles","makeStyles","theme","createStyles","root","display","formControl","margin","spacing","Filtering","handleFiltering","fixFiltering","clearFiltering","classes","manuEl","isOpenA","setIsOpenA","isOpenB","setIsOpenB","밀링","선반","stateA","setStateA","알루미늄","탄소강","구리","합급강","강철","stateB","setStateB","handleChangeA","event","name","checked","String","handleChangeB","FormControl","component","FormGroup","FormControlLabel","control","Checkbox","onChange","color","label","Togle","handleChatFiltering","checkedB","state","setState","Switch","Card","cards","length","map","el","title","status","client","due","count","amount","method","material","App","filtering","setFiltering","setCards","prevCards","setPrevCards","defalutCards","setDefaltCards","answer","a","defaultInputCard","axios","get","headers","withCredentials","then","res","data","i","includes","push","changeCards","filter","isTrue","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8a9d50e.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nfunction Header() {\n  const [isopen, setIsopen] = useState(false);\n  const element: any = useRef();\n\n  const handleOpen = () => {\n    setIsopen(!isopen);\n  };\n\n  const closeModal = () => {\n    setIsopen(false);\n  };\n\n  const handleClickOutside = (e: any) => {\n    if (isopen && !element.current.contains(e.target)) {\n      setIsopen(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  });\n\n  return (\n    <div className=\"header\">\n      {isopen ? (\n        <div className=\"menuwrap\" ref={element}>\n          <nav id=\"menu\">\n            <div className=\"mobile_company\">\n              <h1>CAPA</h1>\n              <h3>파트너스</h3>\n            </div>\n\n            <h2 className=\"mobile_info\">\n              <span>\n                <i className=\"far fa-building\"></i>파트너정밀가공\n              </span>\n              <span>로그아웃</span>\n            </h2>\n          </nav>\n        </div>\n      ) : null}\n\n      <div className={isopen ? \"modal_open\" : \"header_company\"}>\n        <h1 className=\"mobile_header_info\">\n          <i className=\"fas fa-bars\" onClick={handleOpen}></i>\n        </h1>\n\n        <h1>CAPA</h1>\n        <span>파트너스</span>\n      </div>\n      <h2 className=\"header_info\">\n        <span>\n          <i className=\"far fa-building\"></i>A 가공업체\n        </span>\n        |<span>로그아웃</span>\n      </h2>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Summery() {\n  return (\n    <div className=\"summery\">\n      <h3>들어온 요청</h3>\n      <div>파트너님에게 딱 맞는 요청서를 찾아보세요.</div>\n    </div>\n  );\n}\n\nexport default Summery;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\ninterface filterProps {\n  handleFiltering: (answer: string) => void;\n  fixFiltering: (answer: string) => void;\n  clearFiltering: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    formControl: {\n      margin: theme.spacing(3),\n    },\n  })\n);\n\nfunction Filtering({\n  handleFiltering,\n  fixFiltering,\n  clearFiltering,\n}: filterProps) {\n  const classes = useStyles();\n  const manuEl: any = useRef();\n  const [isOpenA, setIsOpenA] = useState<boolean>(false);\n  const [isOpenB, setIsOpenB] = useState<boolean>(false);\n  const [stateA, setStateA] = useState({\n    밀링: false,\n    선반: false,\n  });\n\n  const [stateB, setStateB] = useState({\n    알루미늄: false,\n    탄소강: false,\n    구리: false,\n    합급강: false,\n    강철: false,\n  });\n\n  const handleClickOutside = (e: any) => {\n    if (isOpenA || (isOpenB && !manuEl.current.contains(e.target))) {\n      setIsOpenA(false);\n      setIsOpenB(false);\n    }\n  };\n  const handleClear = () => {\n    setStateA({\n      밀링: false,\n      선반: false,\n    });\n    setStateB({\n      알루미늄: false,\n      탄소강: false,\n      구리: false,\n      합급강: false,\n      강철: false,\n    });\n    clearFiltering();\n  };\n  const maunStateA = () => {\n    setIsOpenA(!isOpenA);\n  };\n  const maunStateB = () => {\n    setIsOpenB(!isOpenB);\n  };\n\n  const handleChangeA = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStateA({ ...stateA, [event.target.name]: event.target.checked });\n    if (event.target.checked) {\n      handleFiltering(String(event.target.name));\n    } else {\n      fixFiltering(String(event.target.name));\n    }\n  };\n\n  const handleChangeB = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStateB({ ...stateB, [event.target.name]: event.target.checked });\n    if (event.target.checked) {\n      handleFiltering(String(event.target.name));\n    } else {\n      fixFiltering(String(event.target.name));\n    }\n  };\n\n  const { 밀링, 선반 } = stateA;\n  const { 알루미늄, 탄소강, 구리, 합급강, 강철 } = stateB;\n\n  return (\n    <div className=\"filtering\">\n      <div>\n        <button onClick={maunStateA}>\n          가공방식<i className=\"fas fa-caret-down\"></i>\n        </button>\n        {isOpenA ? (\n          <div className=\"filtering_selecter\" ref={manuEl}>\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={밀링}\n                      onChange={handleChangeA}\n                      name=\"밀링\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"밀링\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={선반}\n                      onChange={handleChangeA}\n                      name=\"선반\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"선반\"\n                />\n              </FormGroup>\n            </FormControl>\n          </div>\n        ) : null}\n      </div>\n      <div>\n        <button onClick={maunStateB}>\n          재료<i className=\"fas fa-caret-down\"></i>\n        </button>\n        {isOpenB ? (\n          <div className=\"filtering_selecter\" ref={manuEl}>\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={알루미늄}\n                      onChange={handleChangeB}\n                      name=\"알루미늄\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"알루미늄\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={탄소강}\n                      onChange={handleChangeB}\n                      name=\"탄소강\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"탄소강\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={구리}\n                      onChange={handleChangeB}\n                      name=\"구리\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"구리\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={합급강}\n                      onChange={handleChangeB}\n                      name=\"합급강\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"합급강\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={강철}\n                      onChange={handleChangeB}\n                      name=\"강철\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"강철\"\n                />\n              </FormGroup>\n            </FormControl>\n          </div>\n        ) : null}\n      </div>\n      <div className=\"filtering_reset\" onClick={handleClear}>\n        <i className=\"fas fa-redo-alt\"></i>\n        <div>필터링 리셋</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Filtering;\n","import React, { useState } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\ninterface TogleProps {\n  handleChatFiltering: (isTrue: boolean) => void;\n}\n\nfunction Togle({ handleChatFiltering }: TogleProps) {\n  const [state, setState] = useState({\n    checkedB: false,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    handleChatFiltering(event.target.checked);\n  };\n\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedB}\n            onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"상담 중인 요청만 보기\"\n      />\n    </div>\n  );\n}\nexport default Togle;\n","import { Divider } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\n\ninterface CardProps {\n  cards: any;\n}\n\ninterface Cards {\n  id: number;\n  title: string;\n  client: string;\n  due: string;\n  count: number;\n  amount: number;\n  method: string[];\n  material: string[];\n  status: string;\n}\n\nfunction Card({ cards }: CardProps) {\n  return (\n    <div className=\"card_form\">\n      {cards.length === 0 ? (\n        <div className=\"card_empty\">조건에 맞는 견적 요청이 없습니다.</div>\n      ) : (\n        <>\n          {cards.map((el: Cards) => {\n            return (\n              <div className=\"card\">\n                <h3 className=\"card_title\">\n                  <div>{el.title}</div>\n                  {el.status === \"상담중\" ? (\n                    <div className=\"chating\">상담중</div>\n                  ) : null}\n                </h3>\n                <div>{el.client}</div>\n                <div className=\"due\">{el.due}까지 납기</div>\n\n                <hr></hr>\n                <div>\n                  <div>\n                    <span>도면 갯수</span>\n                    <span className=\"count\">{el.count}개</span>\n                  </div>\n\n                  <div>\n                    <span>총 수량</span>\n                    <span className=\"count\">{el.amount}개</span>\n                  </div>\n\n                  <div>\n                    <span>가공 방식</span>\n                    <span className=\"count\">\n                      {el.method.length > 1 ? String(el.method) : el.method}\n                    </span>\n                  </div>\n\n                  <div>\n                    <span>재료</span>\n                    <span className=\"count\">\n                      {el.material.length > 1\n                        ? String(el.material)\n                        : el.material}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"card_btn\">\n                  <button className=\"answer_btn\">요청 내용 보내기</button>\n                  <button className=\"chat_btn\">채팅 하기</button>\n                </div>\n              </div>\n            );\n          })}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport Summery from \"./components/summery\";\nimport Filtering from \"./components/filtering\";\nimport Togle from \"./components/togle\";\nimport Card from \"./components/card\";\nimport axios, { AxiosResponse } from \"axios\";\n\nfunction App() {\n  const [filtering, setFiltering] = useState<string[]>([]);\n  const [cards, setCards] = useState<object[]>([]);\n  const [prevCards, setPrevCards] = useState<object[]>([]);\n  const [defalutCards, setDefaltCards] = useState<object[]>([]);\n\n  const handleChatFiltering = (isTrue: boolean) => {\n    if (isTrue) {\n      let changeCards = cards.filter((el: any) => {\n        if (el.status === \"상담중\") {\n          return true;\n        }\n      });\n      setPrevCards(cards);\n      setCards(changeCards);\n    } else if (!isTrue) {\n      setCards(prevCards);\n    }\n  };\n\n  const handleFiltering = async (answer: string) => {\n    setFiltering([...filtering, answer]);\n  };\n\n  const fixFiltering = (answer: string) => {\n    setFiltering(\n      filtering.filter((el) => {\n        if (el !== answer) {\n          return el;\n        }\n      })\n    );\n  };\n\n  const clearFiltering = () => {\n    setFiltering([]);\n    defaultInputCard();\n  };\n\n  const defaultInputCard = async () => {\n    await axios\n      .get(\"http://localhost:3000/requests\", {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n      .then((res) => {\n        setCards(res.data);\n        setDefaltCards(res.data);\n      });\n  };\n\n  useEffect(() => {\n    let method: string[] = [];\n    let material: string[] = [];\n\n    if (filtering !== []) {\n      for (let i = 0; i < filtering.length; i++) {\n        if ([\"밀링\", \"선반\"].includes(filtering[i])) {\n          method.push(filtering[i]);\n        } else if (\n          [\"알루미늄\", \"탄소강\", \"구리\", \"합급강\", \"강철\"].includes(\n            filtering[i]\n          )\n        ) {\n          material.push(filtering[i]);\n        }\n      }\n    }\n    // * 필터링된 메뉴들 속성을 나눴습니다.\n\n    if (method.length === 0) {\n      let changeCards = defalutCards.filter((el: any) => {\n        if (el.material.length === material.length) {\n          let i = 0;\n          let isTrue = true;\n          while (i < material.length) {\n            if (el.material.includes(material[i]) === false) {\n              isTrue = false;\n            }\n            i++;\n          }\n          if (isTrue) {\n            return true;\n          }\n        }\n      });\n      setCards(changeCards);\n    }\n\n    if (material.length === 0) {\n      let changeCards = defalutCards.filter((el: any) => {\n        if (el.method.length === method.length) {\n          let i = 0;\n          let isTrue = true;\n          while (i < method.length) {\n            if (el.method.includes(method[i]) === false) {\n              isTrue = false;\n            }\n            i++;\n          }\n          if (isTrue) {\n            return true;\n          }\n        }\n      });\n      setCards(changeCards);\n    }\n\n    if (method.length !== 0 && material.length !== 0) {\n      let changeCards = defalutCards.filter((el: any) => {\n        let i = 0;\n        let isTrue = true;\n        if (el.method.length === method.length) {\n          while (i < method.length) {\n            if (el.method.includes(method[i]) === false) {\n              isTrue = false;\n            }\n            i++;\n          }\n        }\n        i = 0;\n        while (i < material.length) {\n          if (el.material.includes(material[i]) === false) {\n            isTrue = false;\n          }\n          i++;\n        }\n        if (isTrue) {\n          return true;\n        }\n      });\n      setCards(changeCards);\n    }\n\n    console.log(filtering);\n    if (filtering.length === 0) {\n      defaultInputCard();\n    }\n  }, [filtering]);\n\n  useEffect(() => {\n    defaultInputCard();\n    console.log(cards);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"App_body\">\n        <Summery />\n        <div className=\"filtering_togle\">\n          <Filtering\n            handleFiltering={handleFiltering}\n            fixFiltering={fixFiltering}\n            clearFiltering={clearFiltering}\n          />\n          <Togle handleChatFiltering={handleChatFiltering} />\n        </div>\n        <Card cards={cards} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}